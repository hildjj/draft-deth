<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.30 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3597 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3597.xml">
<!ENTITY RFC4035 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC6125 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6125.xml">
<!ENTITY RFC6749 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY RFC7230 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC7235 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7235.xml">
<!ENTITY I-D.greevenbosch-appsawg-cbor-cddl SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.greevenbosch-appsawg-cbor-cddl.xml">
<!ENTITY I-D.nottingham-json-home SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.nottingham-json-home.xml">
<!ENTITY I-D.jennings-app-dns-update SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.jennings-app-dns-update.xml">
<!ENTITY RFC3007 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3007.xml">
<!ENTITY RFC7807 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7807.xml">
]>


<rfc ipr="trust200902" docName="draft-hildebrand-deth-01" category="info">

  <front>
    <title abbrev="I-D">DNS Editing Through HTTPS (DETH)</title>

    <author initials="J." surname="Hildebrand" fullname="Joe Hildebrand">
      <organization>Cisco Systems</organization>
      <address>
        <email>jhildebr@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Hoffman" fullname="Paul Hoffman">
      <organization>ICANN</organization>
      <address>
        <email>paul.hoffman@icann.org</email>
      </address>
    </author>

    <date year="2016" month="August" day="02"/>

    
    
    

    <abstract>


<t>There is a strong desire in many communities for service operators
to be able to dynamically update DNS records
in an easy-to-deploy, standardized method. For example, operating SIP requires
DNS records to be added and updated as the SIP service starts and is moved
among different servers. This document describes an HTTPS-based mechanism
for service operators who are authorized by their DNS administrator to add,
change, and delete DNS records.</t>



    </abstract>


  </front>

  <middle>


<!--

Notes between authors go here

(some may be OBE, Joe to check)
- Should section 2.1 reference DANE?
- Should we call the directory URI be called an "endpoint"?
- lowercase "URI" in directory
- in 2.2, client MUST NOT try to edit something not mentioned in directory
- section 3 needs to be more proscriptive because libraries
- section 4 needs to use rfc6570, URI templates, and describe what to do
  with IDNs (send punycode)

-->

<section anchor="introduction" title="Introduction">

<t>This document describes a standardized mechanism called DNS Editing Through
HTTPS (DETH) for developer-friendly dynamic DNS updates over HTTPS <xref target="RFC7230"/>.
Such a mechanism allows a DNS administrator to authorize particular users to
update the records in their zones without any manual intervention on the part of
the DNS administrator.</t>

<t>All transactions described here are authorized. Two types of authorization are
specified: authenticated by HTTP Digest <xref target="RFC7235"/> and OAUTH <xref target="RFC6749"/>. The
DNS administrator can create policies to allow different users different
capabilities for updating zones; such policies are outside the scope of this
document.</t>

<t>A client determines the DETH server for a zone using a DNS lookup. It then
sends HTTPS queries to that server to get information about what the client
can change, as well as requests for changes.</t>

<t>The DETH protocol is meant for users who do not currently have a
way to update a zone using the DNS protocol itself.
Although there already is a protocol for dynamic update of DNS records,
<xref target="RFC3007"/>, it is rarely used in practice for more anything more complicated
than inserting a single A or AAAA record. In many scenarios,
using DETH is a simpler way to allow users to update a zone than provisioning
DNS dynamic update.</t>

<t>Some large DNS
operators have implemented their own non-standard mechanisms for allowing
users to update their DNS records, often using HTTP. This indicates that
HTTP-based update is desired in the industry, and a standardized mechanism
could be valuable in many environments.</t>

<section anchor="goals-of-this-protocol" title="Goals of this Protocol">

<t><list style="symbols">
  <t>Authorized additions of a new record to a zone</t>
  <t>Authorized changes to the RDATA and TTL of a record in a zone</t>
  <t>Authorized deletions of a record from a zone</t>
  <t>Discovery of a URI used for editing a zone, such that the client doing the
editing can tell that the server they are contacting is authorized for the
record being edited</t>
  <t>Discovery of what actions can be taken by an authorized user</t>
  <t>Responses can give useful information about why a request was rejected</t>
  <t>Ease of writing an implementation for a wide variety of languages and
platforms is of paramount importance</t>
</list></t>

</section>
<section anchor="non-goals-for-this-protocol" title="Non-Goals for this Protocol">

<t><list style="symbols">
  <t>Updating the contents of any type of configuration other than DNS zones</t>
  <t>Managing DNS servers for anything other than the contents of zones for
which they are authoritative, such as causing them to reload a zone after
update or to clear cache entries</t>
  <t>Pluggable authorization modules</t>
  <t>Editing records in DNS Classes other than IN</t>
</list></t>

</section>
<section anchor="possible-deployment-architectures" title="Possible Deployment Architectures">

<t>There are many ways that the DETH protocol could be deployed. This section gives
some sample architectures.</t>

<t><list style="hanging">
  <t hangText='Native:'>
  An authoritative DNS server system also speaks DETH and uses the results of
updates directly in the zones it serves. The DETH protocol could be built
into DNS server software.</t>
  <t hangText='Bridge:'>
  A DETH server is deployed in front of the management interface for an
authoritative DNS server. The DETH server receives authorized updates from
users, and uses DNS dynamic update <xref target="RFC3007"/> to update the zones on the
authoritative DNS server.</t>
  <t hangText='Data store front end:'>
  A DETH server receives authorized updates from users, modifies a DNS data
store, tells DNS server to reload.</t>
</list></t>

</section>
<section anchor="actors" title="Actors">

<t>The following actors are used in this document:</t>

<t><list style="hanging">
  <t hangText='DETH Server:'>
  A server that speaks HTTPS, and provides an implementation of the server
side of the DETH API, rooted at a discoverable HTTPS URI.  The DETH Server
is authorized by the associated DNS infrastructure for a set of domains to
make policy decisions about DNS edits.  The DETH server is responsible for
enforcing authorization in conformance with this policy.</t>
  <t hangText='DETH Client:'>
  A piece of authorized software that would like to make changes to one or
more DNS records.  In order to make man-in-the-middle attacks more difficult,
the DETH client is responsible for ensuring that it is communicating with the correct
DETH Server for the domain it wants to modify.</t>
  <t hangText='Parent Domain:'>
  The thing that you want to add records to.  (Paul: need DNS terminology here)</t>
</list></t>

</section>
<section anchor="terminology" title="Terminology">

<t>In this document, the key words “MUST”, “MUST NOT”, “REQUIRED”,
“SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”,
and “OPTIONAL” are to be interpreted as described in BCP 14, RFC 2119
<xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="protocol" title="Protocol">

<t>The DETH protocol uses a simple client-server interactions. The client determines
the location of the server either through a DNS lookup or local configuration.
After that, all protocol interactions are over HTTPS.</t>

<t>In the following sections, the client wants to edit records in the “example.com”
zone. The HTTPS examples use the “dig” program <xref target="dig"/> and “curl” program <xref target="curl"/> to get URLs,
but clients will most likely use internal calls to get this information.</t>

<section anchor="determining-the-deth-server-for-a-zone" title="Determining the DETH Server for a Zone">

<t>A client uses a DNS query with the TXT RTYPE using the name of the parent
zone, prefixed with the “_deth” label, for the QNAME. The answer is the base URI for
the HTTPS server running the DETH protocol. This URI returned MUST use the HTTPS
scheme.</t>

<t>For example, to find the DETH server for the “example.com” zone, the query
would have a QNAME of “_deth.example.com” and a QTYPE of TXT. A command-line
equivalent would be:</t>

<figure><artwork type="shell"><![CDATA[
$ dig +short TXT _deth.example.com
https://example.com/deth/
]]></artwork></figure>

<t>If no TXT record is found for a name, the client can assume that the parent
does not implement the DETH protocol.  However, explicit configuration might
still allow a client to find a DETH server.</t>

<t>If the DETH server is found using the DNS lookup described here, the client MUST perform the
following checks before using the result:</t>

<t><list style="symbols">
  <t>Ensure that the string is a valid HTTPS URI (see <xref target="RFC7230"/>, section 2.7.2).</t>
  <t>Ensure that the TXT record has a valid DNSSEC <xref target="RFC4035"/> signature OR that the
host portion of the URI matches the parent domain, with no port specified.</t>
  <t>Ensure that the certificate offered when the URI is accessed using HTTPS
matches the domain name using the rules in <xref target="RFC6125"/>.</t>
  <t>Ensure that the DETH server’s certificate is signed by a trusted Certificate
Authority.</t>
</list></t>

</section>
<section anchor="directory" title="Determining Authorized Edits">

<t>The DETH client does an HTTPS GET request to the DETH server
to get a JSON-formatted “home document” (<xref target="I-D.nottingham-json-home"/>)
describing the
edits that the client is authorized to perform. For example:</t>

<figure><artwork type="shell"><![CDATA[
curl -X GET https://example.com/deth/
]]></artwork></figure>

<t>Might return:</t>

<figure title="Home Document Example" anchor="example-dir"><artwork type="json"><![CDATA[
{
  "resources": {
    "tag:deth@ietf.org,2016-08-02:A": {
      "href-template": "A/{label}",
      "href-vars": {
        "label": "tag:deth@ietf.org,2016-08-02:label"
      },
      "hints": {
        "allow": ["GET", "PUT", "DELETE"]
    },
    "tag:deth@ietf.org,2016-08-02:AAAA": {
      "href-template": "AAAA/{label}",
      "href-vars": {
        "label": "tag:deth@ietf.org,2016-08-02:label"
      },
      "hints": {
        "allow": ["GET", "PUT", "DELETE"]
    },
    "tag:deth@ietf.org,2016-08-02:SRV": {
      "href-template": "SRV/{label}",
      "href-vars": {
        "label": "tag:deth@ietf.org,2016-08-02:label"
      },
      "hints": {
        "allow": ["GET", "PUT", "DELETE"]
    },
    "tag:deth@ietf.org,2016-08-02:TYPE255": {
      "href-template": "TYPE255/{label}",
      "href-vars": {
        "label": "tag:deth@ietf.org,2016-08-02:label"
      },
      "hints": {
        "allow": ["GET", "PUT", "DELETE"]
    },
  }
}
]]></artwork></figure>

<t>The valid keys for the top level JSON object are a popular subset of
<xref target="IANA-rrtypes"/>, plus a mechanism for supporting all other RDATA.</t>

</section>
</section>
<section anchor="authentication-and-authorization" title="Authentication and Authorization">

<t>All requests are authenticated either by by HTTP Digest <xref target="RFC7235"/> and OAUTH <xref target="RFC6749"/>.
Parameters supported for either of these mechanisms are determined by the DETH Server.
This document makes no recommendations for best authentication practices beyond
what have already been described in other documents published by the IETF.</t>

<t>After the DETH server authenticates a user, it determines which actions that user
is authorized to make. If using HTTP Digest, the authorization policy probably
comes from a database. If using OAUTH, that determination might be part of the
OAUTH interaction.</t>

</section>
<section anchor="formingURL" title="Forming Request URIs">

<t>When a client wants to edit a particular DNS record, it inserts the full name of
the record into the URI template for the RTYPE found in the directory JSON (see
<xref target="directory"/>), in the parameter with the URI “tag:deth@ietf.org,2016-08-02:label”.
For example, if the directory JSON was that specified in
<xref target="example-dir"/>, and the client wanted to edit a <spanx style="verb">AAAA</spanx> record for
<spanx style="verb">foo.example.com</spanx>, the URL would be</t>

<figure><artwork type="shell"><![CDATA[
https://example.com/deth/AAAA/foo.example.com
]]></artwork></figure>

<t>TODO: specify more rules about URL combination and escaping to avoid attacks.</t>

</section>
<section anchor="record-editing" title="Record Editing">

<t>This section describes the semantics of requests to edit DNS
records.  The specification covers how to specify which
edits are desired, but does not yet cover how the DNS server deals with
updating SOA records, nor how any DNSSEC records would need to be updated.</t>

<section anchor="encoding-in-json" title="Encoding in JSON">

<t>The JSON sent to the URIs formed according to the rules in <xref target="formingURL"/> looks
like:</t>

<figure title="Update Example" anchor="example-update"><artwork type="json"><![CDATA[
{
  "RTYPE": "AAAA",
  "v6address": "::1",
  "TTL": 3600,
  "comment": "This is my home"
}
]]></artwork></figure>

<t>All of the potential updates are specified by the following CDDL (see <xref target="I-D.greevenbosch-appsawg-cbor-cddl"/>):</t>

<figure title="DETH Update CDDL" anchor="update-cddl"><artwork type="cddl"><![CDATA[
update = A_update / AAAA_update / CNAME_update / NS_update /
         PTR_update / MX_update / SRV_update / TXT_update /
         rrtype_update

A_update = {
  RTYPE: "A",
  v4address: tstr,
  common
}

AAAA_update = {
  RTYPE: "AAAA",
  v6address: tstr,
  common
}

CNAME_update = {
  RTYPE: "CNAME",
  cname: tstr,
  common
}

NS_update = {
  RTYPE: "NS",
  nsdname: tstr,
  common
}

PTR_update = {
  RTYPE: "PTR",
  ptrdname: tstr,
  common
}

MX_update = {
  RTYPE: "MX",
  preference: uint,
  exchange: tstr,
  common
}

SRV_update = {
  RTYPE: "SRV",
  priority: uint,
  weight: uint,
  target: tstr,
  common
}

TXT_update = {
  RTYPE: "TXT",
  data: tstr,
  common
}

rrtype_update = {
  RTYPE: tstr .regexp "TYPE\\d+",
  RDATA: tstr,
  common
}

common = (
  ? TTL: uint,
  ? comment: tstr
)
]]></artwork></figure>

<t>For updates that match the rrtype_update syntax, the rules for encoding RDATA
from <xref target="RFC3597"/> are used.</t>

</section>
<section anchor="getting-records" title="Getting Records">

<t>Sending <spanx style="verb">GET</spanx> requests to the URIs formed in <xref target="formingURL"/> is
supported in order to allow clients more easily edit records.</t>

<t>TODO: The response
types for <spanx style="verb">GET</spanx> responses will be specified in a future version of this
document.</t>

</section>
<section anchor="create" title="Creating Records">

<t>A new record is created by sending the desired JSON document that matches
<xref target="update-cddl"/> to the URI formed by the rules in <xref target="formingURL"/>, using the
<spanx style="verb">POST</spanx> HTTP verb.</t>

<t>If a TTL is not sent with the request, a system default will be used.  The
response from this <spanx style="verb">PUT</spanx> will be the JSON form of the record, as inserted.
This response MUST have the TTL included.</t>

</section>
<section anchor="delete" title="Deleting Records">

<t>A new record is created by sending the desired JSON document that matches
<xref target="update-cddl"/> to the URI formed by the rules in <xref target="formingURL"/>, using the
<spanx style="verb">DELETE</spanx> HTTP verb.</t>

<t>Currently, this will delete all matching records.  TODO: Once matching rules have been
defined in a later version of this document, individual record deleting may be
allowed.</t>

</section>
<section anchor="updating-records" title="Updating Records">

<t>Updating records in place is not yet specified.  A prerequisite for this
feature will be a way to match existing records, so that only one of several
existing records with the same name and RTYPE will be modified.</t>

<t>For now, a combination of request as specified in <xref target="delete"/> and <xref target="create"/>
may be used.</t>

<t>TODO: Add matching feature or change this section.</t>

</section>
<section anchor="return-codes-and-errors" title="Return Codes and Errors">

<t>Errors use the approach from <xref target="RFC7807"/>.</t>

<t>TODO: Error information will be specified in a future revision of this document.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>No new IANA registries are expected.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Careful authorization of all edits is very important. All changes that are
allowed by this specification MUST be authorized using the model described.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3597;
&RFC4035;
&RFC6125;
&RFC6749;
&RFC7230;
&RFC7235;


    </references>

    <references title='Informative References'>

&I-D.greevenbosch-appsawg-cbor-cddl;
&I-D.nottingham-json-home;
&I-D.jennings-app-dns-update;
&RFC3007;
&RFC7807;
<reference anchor="dig" target="https://www.isc.org/downloads/bind/">
  <front>
    <title>dig utility</title>
    <author >
      <organization>ISC</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="curl" target="https://curl.haxx.se/">
  <front>
    <title>curl program</title>
    <author initials="D." surname="Stenberg" fullname="Daniel Stenberg">
      <organization></organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="IANA-rrtypes" target="http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4">
  <front>
    <title>Resource Record TYPEs</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="2016" month="February" day="23"/>
  </front>
</reference>


    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>This document borrows heavily from many earlier protocols.
Some of the text of this document is liberally lifted from
the long-expired <xref target="I-D.jennings-app-dns-update"/>.</t>

</section>


  </back>
</rfc>

